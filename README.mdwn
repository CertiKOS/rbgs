# CompCertO with State Composition and Encapsulation

## Setup

You will need a version of Coq and various other tools supported by
CompCert v3.6. If you are using `opam` (recommended),


    $ opam init
    $ opam install coq.8.12.0 menhir.20200211

We first build the prerequisite Coqrel and CompCertO by:

    $ (cd coqrel & ./configure & make)
    $ (cd compcert & ./configure & make)

At this point make sure there were no error messages. In particular
if your versions of Coq, Menhir, etc. are not suitable to build
Coqrel and CompCertO, this is when things will break.

If the configuration was successful you should be able to build the
development using `make`. For example, the following command will
build our development for the state composition and encapsulation,
and the proof for the running example in our paper.

    $ make

## Formalization

Our constructions are mainly in the `compcertox/` directory

* The formalization to equip the CompCertO with a notion of composition state:
```
  compcertox/Lifting.v
  compcertox/TensorComp.v
  compcert/common/CategoricalComp.v
  compcert/common/FlatComp.v
```

* The development for CAL
```
  compcertox/AbRel.v
  compcertox/CModule.v
  compcertox/SkelLinking.v
  compcertox/Composition.v
```


* The development for memory separation
```
  compcert/cklr/Join.v
```

* The development for state encapsulation
```
  compcertox/Encapsulation.v
```

* The development for ClightP semantics and composition
```
  compcertox/PEnv.v
  compcertox/ClightP.v
  compcertox/ClightPComp.v
  compcertox/ClightPLink.v
```

* The ring buffer and bounded queue example using ClightP and encapsulation
```
  compcertox/Example.v
```
